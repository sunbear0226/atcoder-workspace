#!/usr/bin/env python3
import sys


def solve(N: int, A: int, B: int):
    print(sum([check_sum_digit(num, A, B) for num in range(N + 1)]))
    return

def check_sum_digit(num: int, A: int, B: int):
    sum = sum_digit(num)
    return num if sum >= A and sum <= B else 0

def sum_digit(num: int):
    return sum([int(n) for n in str(num)])

# Generated by 1.1.5 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    solve(N, A, B)

if __name__ == '__main__':
    main()
