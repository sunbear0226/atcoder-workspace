#!/usr/bin/env python3
import sys


def solve(N: int):
    count = {}
    for i in range(1, N+1):
        p = get_pair(i)
        key = p[0] + '_' + p[1]
        if not count.get(key):
            count[key] = 0
        count[key] += 1
    ans = 0
    for i in range(1, N+1):
        p = get_pair(i)
        key = p[1] + '_' + p[0]
        if count.get(key):
            ans += count[key]
    # print(ans if ans > 0 else 1)
    print(ans)
    return


def get_pair(n: int):
    nf = str(n)[0]
    nl = str(n)[len(str(n)) - 1]
    return [nf, nl]


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)


if __name__ == '__main__':
    main()
