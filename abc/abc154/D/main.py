#!/usr/bin/env python3
import sys


def solve(N: int, K: int, p: "List[int]"):
    M = m = sum(p[:K])
    for i in range(N-K):
        m = m - p[i] + p[i + K]
        M = max(M, m)
    print((1 * K + M) / 2)
    # [公差1の等差数列の合計値] = pi(1 + pi)/2
    # [期待値] = 上記 / pi = (1 + pi)/2
    # [ある区間の期待値合計] = [期待値] * K = (1*K + pi*K)/2
    # M = pi*K なので、(1*K + M)/2 が答えとなる。


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    p = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, p)


if __name__ == '__main__':
    main()
