#!/usr/bin/env python3
import sys
import copy


def solve(N: int):
    divs = make_divisors(N)
    arr = []
    for div in divs:
        if div == 1:
            continue
        n = copy.copy(N)
        while(n % div == 0):
            n //= div
        if n % div == 1:
            arr.append(div)
    cnt = len(set(arr + make_divisors(N - 1))) - 1
    print(cnt)
    return


def make_divisors(n):
    divisors = []
    for i in range(1, int(n**0.5)+1):
        if n % i == 0:
            divisors.append(i)
            if i != n // i:
                divisors.append(n//i)

    # divisors.sort()
    return divisors


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
