#!/usr/bin/env python3
import sys
import collections
from functools import reduce

def solve(N: int, S: str):
    c = collections.Counter(S)
    if len(c.keys()) < 3:
        print(0)
        return
    rgb = reduce(lambda x, y: x*y, [int(i) for i in c.values()])
    cnt = 0
    for i in range(N):
        for j in range(i + 1, N):
            k = 2 * j - i
            if k > N - 1:
                continue
            if S[i] != S[j] and S[i] != S[k] and S[j] != S[k]:
                cnt += 1
    print(rgb - cnt)
    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, S)

if __name__ == '__main__':
    main()
