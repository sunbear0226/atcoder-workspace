#!/usr/bin/env python3
import sys


def solve(N: int, K: int, C: int, S: str):
    bit = S.replace('o', '0').replace('x', '1')
    # print('---前から---')
    b = int(bit, 2)
    # print(format(b, 'b').zfill(N))
    cnt = 0
    w = []
    for i in range(N - C):
        if format(b, 'b').zfill(N)[i] == '1':
            continue
        b |= int(('1' * C + '0' * (N - C - i)).zfill(N), 2)
        # print(format(b, 'b').zfill(N))
        cnt += 1
        w.append(i)
        if cnt >= K:
            break
    # print(format(b, 'b').zfill(N))
    # print('---後ろから---')
    rb = int(bit[::-1], 2)
    # print(format(rb, 'b').zfill(N))
    cnt = 0
    rw = []
    for i in range(N - C):
        if format(rb, 'b').zfill(N)[i] == '1':
            continue
        rb |= int(('1' * C + '0' * (N - C - i)).zfill(N), 2)
        # print(format(rb, 'b').zfill(N))
        cnt += 1
        rw.append(N - 1 - i)
        if cnt >= K:
            break
    # print(format(rb, 'b').zfill(N))
    # print('---前、後---')
    # print(format(b, 'b').zfill(N))
    rrb = format(rb, 'b').zfill(N)[::-1]
    # print(rrb)
    ans = format(b | int(rrb, 2), 'b').zfill(N)
    # print('---答え---')
    # print(ans)
    # for i in range(N):
    #     if ans[i] == '0':
    #         print(i+1)
    print(w)
    print(rw)
    for i in sorted(set(w) & set(rw)):
        print(i+1)
    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, K, C, S)

if __name__ == '__main__':
    main()
